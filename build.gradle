plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jlleitschuh.gradle.ktlint' version '10.2.1'
	id 'org.jetbrains.kotlinx.kover' version '0.8.2'
	id 'maven-publish'
}

group = 'com.students'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

    maven {
        name = "GitHubPackagesAustral"
        url = uri("https://maven.pkg.github.com/austral-ingsis/class-redis-streams")
        credentials {
            username = project.findProperty("github.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.postgresql:postgresql'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
	testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
	testImplementation "com.h2database:h2"

    implementation 'org.springframework.boot:spring-boot-starter-security' //apply role based security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose' // JWT decoding and validation
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.springframework.security:spring-security-oauth2-client"

    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive") // reactive access to redis stream
    implementation("org.springframework.boot:spring-boot-starter-webflux") // reactive webapp, requests simultaneously.
    implementation("io.projectreactor.kotlin:reactor-kotlin-extensions") //ktlin extensions for reactive programming.
    implementation 'org.austral.ingsis:redis-streams-flux:0.1.13'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")

}

kotlin {
    compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

kover {
	useJacoco()
	reports {
		verify {
			rule {
				minBound(50)
			}
		}
	}
}

ktlint {
    disabledRules = ["import-ordering"]
}

tasks.named('build') {
	dependsOn ":koverVerify", ":koverHtmlReport", "ktlintCheck"
}

tasks.named('check') {
	dependsOn ":koverVerify", "ktlintCheck", "test"
}