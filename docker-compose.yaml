version: '3'

services:
  # Spring app service
  snippet_api:
    build:
      context: . # Ubicaci√≥n del dockerfile
      dockerfile: Dockerfile.multi
    ports:
      - '8082:8080' # Puerto del contenedor:puerto del host
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME} # Url comunican via docker (INTERNO)
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      spring.security.oauth2.resourceserver.jwt.issuer-uri: ${AUTH_SERVER_URI}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

  # Postgres Database
  ingsis-snippet-db:
    image: postgres:12 #dockerhub
    ports:
      - '5002:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data-ingsis-snippet:/var/lib/postgresql/data

  api:
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "8084:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: false


  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

  redis:
    image: redis:latest
    ports:
      - '6379:6379'

volumes:
  db-data-ingsis-snippet:
    external: false
  blob:
    external: false
